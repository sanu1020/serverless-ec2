import { SENSITIVE_STRING } from "@aws-sdk/smithy-client";
export var SelfServicePortal;
(function (SelfServicePortal) {
    SelfServicePortal["disabled"] = "disabled";
    SelfServicePortal["enabled"] = "enabled";
})(SelfServicePortal || (SelfServicePortal = {}));
export var TransportProtocol;
(function (TransportProtocol) {
    TransportProtocol["tcp"] = "tcp";
    TransportProtocol["udp"] = "udp";
})(TransportProtocol || (TransportProtocol = {}));
export var ClientVpnEndpointStatusCode;
(function (ClientVpnEndpointStatusCode) {
    ClientVpnEndpointStatusCode["available"] = "available";
    ClientVpnEndpointStatusCode["deleted"] = "deleted";
    ClientVpnEndpointStatusCode["deleting"] = "deleting";
    ClientVpnEndpointStatusCode["pending_associate"] = "pending-associate";
})(ClientVpnEndpointStatusCode || (ClientVpnEndpointStatusCode = {}));
export var ClientVpnRouteStatusCode;
(function (ClientVpnRouteStatusCode) {
    ClientVpnRouteStatusCode["active"] = "active";
    ClientVpnRouteStatusCode["creating"] = "creating";
    ClientVpnRouteStatusCode["deleting"] = "deleting";
    ClientVpnRouteStatusCode["failed"] = "failed";
})(ClientVpnRouteStatusCode || (ClientVpnRouteStatusCode = {}));
export var GatewayType;
(function (GatewayType) {
    GatewayType["ipsec_1"] = "ipsec.1";
})(GatewayType || (GatewayType = {}));
export var HostnameType;
(function (HostnameType) {
    HostnameType["ip_name"] = "ip-name";
    HostnameType["resource_name"] = "resource-name";
})(HostnameType || (HostnameType = {}));
export var SubnetState;
(function (SubnetState) {
    SubnetState["available"] = "available";
    SubnetState["pending"] = "pending";
})(SubnetState || (SubnetState = {}));
export var Tenancy;
(function (Tenancy) {
    Tenancy["dedicated"] = "dedicated";
    Tenancy["default"] = "default";
    Tenancy["host"] = "host";
})(Tenancy || (Tenancy = {}));
export var VpcState;
(function (VpcState) {
    VpcState["available"] = "available";
    VpcState["pending"] = "pending";
})(VpcState || (VpcState = {}));
export var FleetExcessCapacityTerminationPolicy;
(function (FleetExcessCapacityTerminationPolicy) {
    FleetExcessCapacityTerminationPolicy["NO_TERMINATION"] = "no-termination";
    FleetExcessCapacityTerminationPolicy["TERMINATION"] = "termination";
})(FleetExcessCapacityTerminationPolicy || (FleetExcessCapacityTerminationPolicy = {}));
export var BareMetal;
(function (BareMetal) {
    BareMetal["EXCLUDED"] = "excluded";
    BareMetal["INCLUDED"] = "included";
    BareMetal["REQUIRED"] = "required";
})(BareMetal || (BareMetal = {}));
export var BurstablePerformance;
(function (BurstablePerformance) {
    BurstablePerformance["EXCLUDED"] = "excluded";
    BurstablePerformance["INCLUDED"] = "included";
    BurstablePerformance["REQUIRED"] = "required";
})(BurstablePerformance || (BurstablePerformance = {}));
export var CpuManufacturer;
(function (CpuManufacturer) {
    CpuManufacturer["AMAZON_WEB_SERVICES"] = "amazon-web-services";
    CpuManufacturer["AMD"] = "amd";
    CpuManufacturer["INTEL"] = "intel";
})(CpuManufacturer || (CpuManufacturer = {}));
export var InstanceGeneration;
(function (InstanceGeneration) {
    InstanceGeneration["CURRENT"] = "current";
    InstanceGeneration["PREVIOUS"] = "previous";
})(InstanceGeneration || (InstanceGeneration = {}));
export var LocalStorage;
(function (LocalStorage) {
    LocalStorage["EXCLUDED"] = "excluded";
    LocalStorage["INCLUDED"] = "included";
    LocalStorage["REQUIRED"] = "required";
})(LocalStorage || (LocalStorage = {}));
export var LocalStorageType;
(function (LocalStorageType) {
    LocalStorageType["HDD"] = "hdd";
    LocalStorageType["SSD"] = "ssd";
})(LocalStorageType || (LocalStorageType = {}));
export var FleetOnDemandAllocationStrategy;
(function (FleetOnDemandAllocationStrategy) {
    FleetOnDemandAllocationStrategy["LOWEST_PRICE"] = "lowest-price";
    FleetOnDemandAllocationStrategy["PRIORITIZED"] = "prioritized";
})(FleetOnDemandAllocationStrategy || (FleetOnDemandAllocationStrategy = {}));
export var FleetCapacityReservationUsageStrategy;
(function (FleetCapacityReservationUsageStrategy) {
    FleetCapacityReservationUsageStrategy["USE_CAPACITY_RESERVATIONS_FIRST"] = "use-capacity-reservations-first";
})(FleetCapacityReservationUsageStrategy || (FleetCapacityReservationUsageStrategy = {}));
export var SpotAllocationStrategy;
(function (SpotAllocationStrategy) {
    SpotAllocationStrategy["CAPACITY_OPTIMIZED"] = "capacity-optimized";
    SpotAllocationStrategy["CAPACITY_OPTIMIZED_PRIORITIZED"] = "capacity-optimized-prioritized";
    SpotAllocationStrategy["DIVERSIFIED"] = "diversified";
    SpotAllocationStrategy["LOWEST_PRICE"] = "lowest-price";
    SpotAllocationStrategy["PRICE_CAPACITY_OPTIMIZED"] = "price-capacity-optimized";
})(SpotAllocationStrategy || (SpotAllocationStrategy = {}));
export var SpotInstanceInterruptionBehavior;
(function (SpotInstanceInterruptionBehavior) {
    SpotInstanceInterruptionBehavior["hibernate"] = "hibernate";
    SpotInstanceInterruptionBehavior["stop"] = "stop";
    SpotInstanceInterruptionBehavior["terminate"] = "terminate";
})(SpotInstanceInterruptionBehavior || (SpotInstanceInterruptionBehavior = {}));
export var FleetReplacementStrategy;
(function (FleetReplacementStrategy) {
    FleetReplacementStrategy["LAUNCH"] = "launch";
    FleetReplacementStrategy["LAUNCH_BEFORE_TERMINATE"] = "launch-before-terminate";
})(FleetReplacementStrategy || (FleetReplacementStrategy = {}));
export var DefaultTargetCapacityType;
(function (DefaultTargetCapacityType) {
    DefaultTargetCapacityType["ON_DEMAND"] = "on-demand";
    DefaultTargetCapacityType["SPOT"] = "spot";
})(DefaultTargetCapacityType || (DefaultTargetCapacityType = {}));
export var TargetCapacityUnitType;
(function (TargetCapacityUnitType) {
    TargetCapacityUnitType["MEMORY_MIB"] = "memory-mib";
    TargetCapacityUnitType["UNITS"] = "units";
    TargetCapacityUnitType["VCPU"] = "vcpu";
})(TargetCapacityUnitType || (TargetCapacityUnitType = {}));
export var FleetType;
(function (FleetType) {
    FleetType["INSTANT"] = "instant";
    FleetType["MAINTAIN"] = "maintain";
    FleetType["REQUEST"] = "request";
})(FleetType || (FleetType = {}));
export var InstanceLifecycle;
(function (InstanceLifecycle) {
    InstanceLifecycle["ON_DEMAND"] = "on-demand";
    InstanceLifecycle["SPOT"] = "spot";
})(InstanceLifecycle || (InstanceLifecycle = {}));
export var PlatformValues;
(function (PlatformValues) {
    PlatformValues["Windows"] = "Windows";
})(PlatformValues || (PlatformValues = {}));
export var DestinationFileFormat;
(function (DestinationFileFormat) {
    DestinationFileFormat["parquet"] = "parquet";
    DestinationFileFormat["plain_text"] = "plain-text";
})(DestinationFileFormat || (DestinationFileFormat = {}));
export var LogDestinationType;
(function (LogDestinationType) {
    LogDestinationType["cloud_watch_logs"] = "cloud-watch-logs";
    LogDestinationType["kinesis_data_firehose"] = "kinesis-data-firehose";
    LogDestinationType["s3"] = "s3";
})(LogDestinationType || (LogDestinationType = {}));
export var FlowLogsResourceType;
(function (FlowLogsResourceType) {
    FlowLogsResourceType["NetworkInterface"] = "NetworkInterface";
    FlowLogsResourceType["Subnet"] = "Subnet";
    FlowLogsResourceType["TransitGateway"] = "TransitGateway";
    FlowLogsResourceType["TransitGatewayAttachment"] = "TransitGatewayAttachment";
    FlowLogsResourceType["VPC"] = "VPC";
})(FlowLogsResourceType || (FlowLogsResourceType = {}));
export var TrafficType;
(function (TrafficType) {
    TrafficType["ACCEPT"] = "ACCEPT";
    TrafficType["ALL"] = "ALL";
    TrafficType["REJECT"] = "REJECT";
})(TrafficType || (TrafficType = {}));
export var VolumeType;
(function (VolumeType) {
    VolumeType["gp2"] = "gp2";
    VolumeType["gp3"] = "gp3";
    VolumeType["io1"] = "io1";
    VolumeType["io2"] = "io2";
    VolumeType["sc1"] = "sc1";
    VolumeType["st1"] = "st1";
    VolumeType["standard"] = "standard";
})(VolumeType || (VolumeType = {}));
export var ContainerFormat;
(function (ContainerFormat) {
    ContainerFormat["ova"] = "ova";
})(ContainerFormat || (ContainerFormat = {}));
export var DiskImageFormat;
(function (DiskImageFormat) {
    DiskImageFormat["RAW"] = "RAW";
    DiskImageFormat["VHD"] = "VHD";
    DiskImageFormat["VMDK"] = "VMDK";
})(DiskImageFormat || (DiskImageFormat = {}));
export var ExportEnvironment;
(function (ExportEnvironment) {
    ExportEnvironment["citrix"] = "citrix";
    ExportEnvironment["microsoft"] = "microsoft";
    ExportEnvironment["vmware"] = "vmware";
})(ExportEnvironment || (ExportEnvironment = {}));
export var ExportTaskState;
(function (ExportTaskState) {
    ExportTaskState["active"] = "active";
    ExportTaskState["cancelled"] = "cancelled";
    ExportTaskState["cancelling"] = "cancelling";
    ExportTaskState["completed"] = "completed";
})(ExportTaskState || (ExportTaskState = {}));
export var IpamState;
(function (IpamState) {
    IpamState["create_complete"] = "create-complete";
    IpamState["create_failed"] = "create-failed";
    IpamState["create_in_progress"] = "create-in-progress";
    IpamState["delete_complete"] = "delete-complete";
    IpamState["delete_failed"] = "delete-failed";
    IpamState["delete_in_progress"] = "delete-in-progress";
    IpamState["isolate_complete"] = "isolate-complete";
    IpamState["isolate_in_progress"] = "isolate-in-progress";
    IpamState["modify_complete"] = "modify-complete";
    IpamState["modify_failed"] = "modify-failed";
    IpamState["modify_in_progress"] = "modify-in-progress";
    IpamState["restore_in_progress"] = "restore-in-progress";
})(IpamState || (IpamState = {}));
export var IpamPoolAwsService;
(function (IpamPoolAwsService) {
    IpamPoolAwsService["ec2"] = "ec2";
})(IpamPoolAwsService || (IpamPoolAwsService = {}));
export var IpamPoolPublicIpSource;
(function (IpamPoolPublicIpSource) {
    IpamPoolPublicIpSource["amazon"] = "amazon";
    IpamPoolPublicIpSource["byoip"] = "byoip";
})(IpamPoolPublicIpSource || (IpamPoolPublicIpSource = {}));
export var IpamScopeType;
(function (IpamScopeType) {
    IpamScopeType["private"] = "private";
    IpamScopeType["public"] = "public";
})(IpamScopeType || (IpamScopeType = {}));
export var IpamPoolState;
(function (IpamPoolState) {
    IpamPoolState["create_complete"] = "create-complete";
    IpamPoolState["create_failed"] = "create-failed";
    IpamPoolState["create_in_progress"] = "create-in-progress";
    IpamPoolState["delete_complete"] = "delete-complete";
    IpamPoolState["delete_failed"] = "delete-failed";
    IpamPoolState["delete_in_progress"] = "delete-in-progress";
    IpamPoolState["isolate_complete"] = "isolate-complete";
    IpamPoolState["isolate_in_progress"] = "isolate-in-progress";
    IpamPoolState["modify_complete"] = "modify-complete";
    IpamPoolState["modify_failed"] = "modify-failed";
    IpamPoolState["modify_in_progress"] = "modify-in-progress";
    IpamPoolState["restore_in_progress"] = "restore-in-progress";
})(IpamPoolState || (IpamPoolState = {}));
export var IpamResourceDiscoveryState;
(function (IpamResourceDiscoveryState) {
    IpamResourceDiscoveryState["CREATE_COMPLETE"] = "create-complete";
    IpamResourceDiscoveryState["CREATE_FAILED"] = "create-failed";
    IpamResourceDiscoveryState["CREATE_IN_PROGRESS"] = "create-in-progress";
    IpamResourceDiscoveryState["DELETE_COMPLETE"] = "delete-complete";
    IpamResourceDiscoveryState["DELETE_FAILED"] = "delete-failed";
    IpamResourceDiscoveryState["DELETE_IN_PROGRESS"] = "delete-in-progress";
    IpamResourceDiscoveryState["ISOLATE_COMPLETE"] = "isolate-complete";
    IpamResourceDiscoveryState["ISOLATE_IN_PROGRESS"] = "isolate-in-progress";
    IpamResourceDiscoveryState["MODIFY_COMPLETE"] = "modify-complete";
    IpamResourceDiscoveryState["MODIFY_FAILED"] = "modify-failed";
    IpamResourceDiscoveryState["MODIFY_IN_PROGRESS"] = "modify-in-progress";
    IpamResourceDiscoveryState["RESTORE_IN_PROGRESS"] = "restore-in-progress";
})(IpamResourceDiscoveryState || (IpamResourceDiscoveryState = {}));
export var IpamScopeState;
(function (IpamScopeState) {
    IpamScopeState["create_complete"] = "create-complete";
    IpamScopeState["create_failed"] = "create-failed";
    IpamScopeState["create_in_progress"] = "create-in-progress";
    IpamScopeState["delete_complete"] = "delete-complete";
    IpamScopeState["delete_failed"] = "delete-failed";
    IpamScopeState["delete_in_progress"] = "delete-in-progress";
    IpamScopeState["isolate_complete"] = "isolate-complete";
    IpamScopeState["isolate_in_progress"] = "isolate-in-progress";
    IpamScopeState["modify_complete"] = "modify-complete";
    IpamScopeState["modify_failed"] = "modify-failed";
    IpamScopeState["modify_in_progress"] = "modify-in-progress";
    IpamScopeState["restore_in_progress"] = "restore-in-progress";
})(IpamScopeState || (IpamScopeState = {}));
export var KeyFormat;
(function (KeyFormat) {
    KeyFormat["pem"] = "pem";
    KeyFormat["ppk"] = "ppk";
})(KeyFormat || (KeyFormat = {}));
export var KeyType;
(function (KeyType) {
    KeyType["ed25519"] = "ed25519";
    KeyType["rsa"] = "rsa";
})(KeyType || (KeyType = {}));
export var CapacityReservationPreference;
(function (CapacityReservationPreference) {
    CapacityReservationPreference["none"] = "none";
    CapacityReservationPreference["open"] = "open";
})(CapacityReservationPreference || (CapacityReservationPreference = {}));
export var ShutdownBehavior;
(function (ShutdownBehavior) {
    ShutdownBehavior["stop"] = "stop";
    ShutdownBehavior["terminate"] = "terminate";
})(ShutdownBehavior || (ShutdownBehavior = {}));
export var MarketType;
(function (MarketType) {
    MarketType["spot"] = "spot";
})(MarketType || (MarketType = {}));
export var InstanceInterruptionBehavior;
(function (InstanceInterruptionBehavior) {
    InstanceInterruptionBehavior["hibernate"] = "hibernate";
    InstanceInterruptionBehavior["stop"] = "stop";
    InstanceInterruptionBehavior["terminate"] = "terminate";
})(InstanceInterruptionBehavior || (InstanceInterruptionBehavior = {}));
export var SpotInstanceType;
(function (SpotInstanceType) {
    SpotInstanceType["one_time"] = "one-time";
    SpotInstanceType["persistent"] = "persistent";
})(SpotInstanceType || (SpotInstanceType = {}));
export var LaunchTemplateAutoRecoveryState;
(function (LaunchTemplateAutoRecoveryState) {
    LaunchTemplateAutoRecoveryState["default"] = "default";
    LaunchTemplateAutoRecoveryState["disabled"] = "disabled";
})(LaunchTemplateAutoRecoveryState || (LaunchTemplateAutoRecoveryState = {}));
export var LaunchTemplateInstanceMetadataEndpointState;
(function (LaunchTemplateInstanceMetadataEndpointState) {
    LaunchTemplateInstanceMetadataEndpointState["disabled"] = "disabled";
    LaunchTemplateInstanceMetadataEndpointState["enabled"] = "enabled";
})(LaunchTemplateInstanceMetadataEndpointState || (LaunchTemplateInstanceMetadataEndpointState = {}));
export var LaunchTemplateInstanceMetadataProtocolIpv6;
(function (LaunchTemplateInstanceMetadataProtocolIpv6) {
    LaunchTemplateInstanceMetadataProtocolIpv6["disabled"] = "disabled";
    LaunchTemplateInstanceMetadataProtocolIpv6["enabled"] = "enabled";
})(LaunchTemplateInstanceMetadataProtocolIpv6 || (LaunchTemplateInstanceMetadataProtocolIpv6 = {}));
export var LaunchTemplateHttpTokensState;
(function (LaunchTemplateHttpTokensState) {
    LaunchTemplateHttpTokensState["optional"] = "optional";
    LaunchTemplateHttpTokensState["required"] = "required";
})(LaunchTemplateHttpTokensState || (LaunchTemplateHttpTokensState = {}));
export var LaunchTemplateInstanceMetadataTagsState;
(function (LaunchTemplateInstanceMetadataTagsState) {
    LaunchTemplateInstanceMetadataTagsState["disabled"] = "disabled";
    LaunchTemplateInstanceMetadataTagsState["enabled"] = "enabled";
})(LaunchTemplateInstanceMetadataTagsState || (LaunchTemplateInstanceMetadataTagsState = {}));
export var LaunchTemplateInstanceMetadataOptionsState;
(function (LaunchTemplateInstanceMetadataOptionsState) {
    LaunchTemplateInstanceMetadataOptionsState["applied"] = "applied";
    LaunchTemplateInstanceMetadataOptionsState["pending"] = "pending";
})(LaunchTemplateInstanceMetadataOptionsState || (LaunchTemplateInstanceMetadataOptionsState = {}));
export var LocalGatewayRouteState;
(function (LocalGatewayRouteState) {
    LocalGatewayRouteState["active"] = "active";
    LocalGatewayRouteState["blackhole"] = "blackhole";
    LocalGatewayRouteState["deleted"] = "deleted";
    LocalGatewayRouteState["deleting"] = "deleting";
    LocalGatewayRouteState["pending"] = "pending";
})(LocalGatewayRouteState || (LocalGatewayRouteState = {}));
export var LocalGatewayRouteType;
(function (LocalGatewayRouteType) {
    LocalGatewayRouteType["propagated"] = "propagated";
    LocalGatewayRouteType["static"] = "static";
})(LocalGatewayRouteType || (LocalGatewayRouteType = {}));
export var LocalGatewayRouteTableMode;
(function (LocalGatewayRouteTableMode) {
    LocalGatewayRouteTableMode["coip"] = "coip";
    LocalGatewayRouteTableMode["direct_vpc_routing"] = "direct-vpc-routing";
})(LocalGatewayRouteTableMode || (LocalGatewayRouteTableMode = {}));
export var PrefixListState;
(function (PrefixListState) {
    PrefixListState["create_complete"] = "create-complete";
    PrefixListState["create_failed"] = "create-failed";
    PrefixListState["create_in_progress"] = "create-in-progress";
    PrefixListState["delete_complete"] = "delete-complete";
    PrefixListState["delete_failed"] = "delete-failed";
    PrefixListState["delete_in_progress"] = "delete-in-progress";
    PrefixListState["modify_complete"] = "modify-complete";
    PrefixListState["modify_failed"] = "modify-failed";
    PrefixListState["modify_in_progress"] = "modify-in-progress";
    PrefixListState["restore_complete"] = "restore-complete";
    PrefixListState["restore_failed"] = "restore-failed";
    PrefixListState["restore_in_progress"] = "restore-in-progress";
})(PrefixListState || (PrefixListState = {}));
export var ConnectivityType;
(function (ConnectivityType) {
    ConnectivityType["PRIVATE"] = "private";
    ConnectivityType["PUBLIC"] = "public";
})(ConnectivityType || (ConnectivityType = {}));
export var NatGatewayState;
(function (NatGatewayState) {
    NatGatewayState["AVAILABLE"] = "available";
    NatGatewayState["DELETED"] = "deleted";
    NatGatewayState["DELETING"] = "deleting";
    NatGatewayState["FAILED"] = "failed";
    NatGatewayState["PENDING"] = "pending";
})(NatGatewayState || (NatGatewayState = {}));
export var RuleAction;
(function (RuleAction) {
    RuleAction["allow"] = "allow";
    RuleAction["deny"] = "deny";
})(RuleAction || (RuleAction = {}));
export var NetworkInterfaceCreationType;
(function (NetworkInterfaceCreationType) {
    NetworkInterfaceCreationType["branch"] = "branch";
    NetworkInterfaceCreationType["efa"] = "efa";
    NetworkInterfaceCreationType["trunk"] = "trunk";
})(NetworkInterfaceCreationType || (NetworkInterfaceCreationType = {}));
export var NetworkInterfaceType;
(function (NetworkInterfaceType) {
    NetworkInterfaceType["api_gateway_managed"] = "api_gateway_managed";
    NetworkInterfaceType["aws_codestar_connections_managed"] = "aws_codestar_connections_managed";
    NetworkInterfaceType["branch"] = "branch";
    NetworkInterfaceType["efa"] = "efa";
    NetworkInterfaceType["gateway_load_balancer"] = "gateway_load_balancer";
    NetworkInterfaceType["gateway_load_balancer_endpoint"] = "gateway_load_balancer_endpoint";
    NetworkInterfaceType["global_accelerator_managed"] = "global_accelerator_managed";
    NetworkInterfaceType["interface"] = "interface";
    NetworkInterfaceType["iot_rules_managed"] = "iot_rules_managed";
    NetworkInterfaceType["lambda"] = "lambda";
    NetworkInterfaceType["load_balancer"] = "load_balancer";
    NetworkInterfaceType["natGateway"] = "natGateway";
    NetworkInterfaceType["network_load_balancer"] = "network_load_balancer";
    NetworkInterfaceType["quicksight"] = "quicksight";
    NetworkInterfaceType["transit_gateway"] = "transit_gateway";
    NetworkInterfaceType["trunk"] = "trunk";
    NetworkInterfaceType["vpc_endpoint"] = "vpc_endpoint";
})(NetworkInterfaceType || (NetworkInterfaceType = {}));
export var NetworkInterfaceStatus;
(function (NetworkInterfaceStatus) {
    NetworkInterfaceStatus["associated"] = "associated";
    NetworkInterfaceStatus["attaching"] = "attaching";
    NetworkInterfaceStatus["available"] = "available";
    NetworkInterfaceStatus["detaching"] = "detaching";
    NetworkInterfaceStatus["in_use"] = "in-use";
})(NetworkInterfaceStatus || (NetworkInterfaceStatus = {}));
export var InterfacePermissionType;
(function (InterfacePermissionType) {
    InterfacePermissionType["EIP_ASSOCIATE"] = "EIP-ASSOCIATE";
    InterfacePermissionType["INSTANCE_ATTACH"] = "INSTANCE-ATTACH";
})(InterfacePermissionType || (InterfacePermissionType = {}));
export var NetworkInterfacePermissionStateCode;
(function (NetworkInterfacePermissionStateCode) {
    NetworkInterfacePermissionStateCode["granted"] = "granted";
    NetworkInterfacePermissionStateCode["pending"] = "pending";
    NetworkInterfacePermissionStateCode["revoked"] = "revoked";
    NetworkInterfacePermissionStateCode["revoking"] = "revoking";
})(NetworkInterfacePermissionStateCode || (NetworkInterfacePermissionStateCode = {}));
export var SpreadLevel;
(function (SpreadLevel) {
    SpreadLevel["host"] = "host";
    SpreadLevel["rack"] = "rack";
})(SpreadLevel || (SpreadLevel = {}));
export var PlacementStrategy;
(function (PlacementStrategy) {
    PlacementStrategy["cluster"] = "cluster";
    PlacementStrategy["partition"] = "partition";
    PlacementStrategy["spread"] = "spread";
})(PlacementStrategy || (PlacementStrategy = {}));
export var PlacementGroupState;
(function (PlacementGroupState) {
    PlacementGroupState["available"] = "available";
    PlacementGroupState["deleted"] = "deleted";
    PlacementGroupState["deleting"] = "deleting";
    PlacementGroupState["pending"] = "pending";
})(PlacementGroupState || (PlacementGroupState = {}));
export var ReplaceRootVolumeTaskState;
(function (ReplaceRootVolumeTaskState) {
    ReplaceRootVolumeTaskState["failed"] = "failed";
    ReplaceRootVolumeTaskState["failed_detached"] = "failed-detached";
    ReplaceRootVolumeTaskState["failing"] = "failing";
    ReplaceRootVolumeTaskState["in_progress"] = "in-progress";
    ReplaceRootVolumeTaskState["pending"] = "pending";
    ReplaceRootVolumeTaskState["succeeded"] = "succeeded";
})(ReplaceRootVolumeTaskState || (ReplaceRootVolumeTaskState = {}));
export const CreateClientVpnEndpointRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ClientVpnEndpointStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateClientVpnEndpointResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateClientVpnRouteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ClientVpnRouteStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateClientVpnRouteResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateCoipCidrRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CoipCidrFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateCoipCidrResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateCoipPoolRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CoipPoolFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateCoipPoolResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateCustomerGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CustomerGatewayFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateCustomerGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDefaultSubnetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PrivateDnsNameOptionsOnLaunchFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SubnetFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDefaultSubnetResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDefaultVpcRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VpcFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDefaultVpcResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NewDhcpConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDhcpOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AttributeValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DhcpConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DhcpOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDhcpOptionsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateEgressOnlyInternetGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InternetGatewayAttachmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EgressOnlyInternetGatewayFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateEgressOnlyInternetGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FleetLaunchTemplateSpecificationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BaselineEbsBandwidthMbpsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MemoryGiBPerVCpuRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MemoryMiBRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkBandwidthGbpsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkInterfaceCountRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TotalLocalStorageGBRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VCpuCountRangeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InstanceRequirementsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PlacementFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FleetLaunchTemplateOverridesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FleetLaunchTemplateConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CapacityReservationOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OnDemandOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FleetSpotCapacityRebalanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FleetSpotMaintenanceStrategiesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SpotOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TargetCapacitySpecificationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateFleetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FleetLaunchTemplateSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BaselineEbsBandwidthMbpsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MemoryGiBPerVCpuFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MemoryMiBFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkBandwidthGbpsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkInterfaceCountFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TotalLocalStorageGBFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VCpuCountRangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InstanceRequirementsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PlacementResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FleetLaunchTemplateOverridesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateAndOverridesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateFleetErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateFleetInstanceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateFleetResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DestinationOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateFlowLogsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateFlowLogsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StorageLocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateFpgaImageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateFpgaImageResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const EbsBlockDeviceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BlockDeviceMappingFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateImageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateImageResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InstanceEventWindowTimeRangeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateInstanceEventWindowRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateInstanceEventWindowResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ExportToS3TaskSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateInstanceExportTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ExportToS3TaskFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InstanceExportDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ExportTaskFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateInstanceExportTaskResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateInternetGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InternetGatewayFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateInternetGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateIpamRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IpamOperatingRegionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IpamFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateIpamResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RequestIpamResourceTagFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateIpamPoolRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IpamResourceTagFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IpamPoolFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateIpamPoolResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateIpamResourceDiscoveryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IpamResourceDiscoveryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateIpamResourceDiscoveryResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateIpamScopeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IpamScopeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateIpamScopeResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateKeyPairRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const KeyPairFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.KeyMaterial && { KeyMaterial: SENSITIVE_STRING }),
});
export const LaunchTemplateEbsBlockDeviceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateBlockDeviceMappingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CapacityReservationTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateCapacityReservationSpecificationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateCpuOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreditSpecificationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ElasticGpuSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateElasticInferenceAcceleratorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateEnclaveOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateHibernationOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateIamInstanceProfileSpecificationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateSpotMarketOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateInstanceMarketOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateLicenseConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateInstanceMaintenanceOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateInstanceMetadataOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplatesMonitoringRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Ipv4PrefixSpecificationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InstanceIpv6AddressRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Ipv6PrefixSpecificationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PrivateIpAddressSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateInstanceNetworkInterfaceSpecificationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplatePlacementRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplatePrivateDnsNameOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateTagSpecificationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RequestLaunchTemplateDataFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateLaunchTemplateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.LaunchTemplateData && { LaunchTemplateData: SENSITIVE_STRING }),
});
export const LaunchTemplateFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ValidationErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ValidationWarningFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateLaunchTemplateResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateLaunchTemplateVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.LaunchTemplateData && { LaunchTemplateData: SENSITIVE_STRING }),
});
export const LaunchTemplateEbsBlockDeviceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateBlockDeviceMappingFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CapacityReservationTargetResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateCapacityReservationSpecificationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateCpuOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreditSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ElasticGpuSpecificationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateElasticInferenceAcceleratorResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateEnclaveOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateHibernationOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateIamInstanceProfileSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateSpotMarketOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateInstanceMarketOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateLicenseConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateInstanceMaintenanceOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateInstanceMetadataOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplatesMonitoringFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Ipv4PrefixSpecificationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InstanceIpv6AddressFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Ipv6PrefixSpecificationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateInstanceNetworkInterfaceSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplatePlacementFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplatePrivateDnsNameOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LaunchTemplateTagSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResponseLaunchTemplateDataFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.UserData && { UserData: SENSITIVE_STRING }),
});
export const LaunchTemplateVersionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.LaunchTemplateData && {
        LaunchTemplateData: ResponseLaunchTemplateDataFilterSensitiveLog(obj.LaunchTemplateData),
    }),
});
export const CreateLaunchTemplateVersionResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.LaunchTemplateVersion && {
        LaunchTemplateVersion: LaunchTemplateVersionFilterSensitiveLog(obj.LaunchTemplateVersion),
    }),
});
export const CreateLocalGatewayRouteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LocalGatewayRouteFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateLocalGatewayRouteResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateLocalGatewayRouteTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StateReasonFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LocalGatewayRouteTableFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateLocalGatewayRouteTableResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LocalGatewayRouteTableVirtualInterfaceGroupAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateLocalGatewayRouteTableVpcAssociationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LocalGatewayRouteTableVpcAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateLocalGatewayRouteTableVpcAssociationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateManagedPrefixListRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ManagedPrefixListFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateManagedPrefixListResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNatGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ProvisionedBandwidthFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NatGatewayFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNatGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNetworkAclRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkAclAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IcmpTypeCodeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkAclEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkAclFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNetworkAclResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNetworkAclEntryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNetworkInsightsAccessScopeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkInsightsAccessScopeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkInsightsAccessScopeContentFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNetworkInsightsAccessScopeResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNetworkInsightsPathRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkInsightsPathFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNetworkInsightsPathResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNetworkInterfaceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkInterfaceAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AttachmentEnaSrdUdpSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AttachmentEnaSrdSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkInterfaceAttachmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const GroupIdentifierFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkInterfaceIpv6AddressFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Ipv6PrefixSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkInterfacePrivateIpAddressFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkInterfaceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNetworkInterfaceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNetworkInterfacePermissionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkInterfacePermissionStateFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NetworkInterfacePermissionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateNetworkInterfacePermissionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreatePlacementGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PlacementGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreatePlacementGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreatePublicIpv4PoolRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreatePublicIpv4PoolResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateReplaceRootVolumeTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ReplaceRootVolumeTaskFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateReplaceRootVolumeTaskResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PriceScheduleSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateReservedInstancesListingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateReservedInstancesListingResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateRestoreImageTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateRestoreImageTaskResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateRouteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateRouteResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateRouteTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
