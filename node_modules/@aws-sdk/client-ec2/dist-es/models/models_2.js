export var RouteOrigin;
(function (RouteOrigin) {
    RouteOrigin["CreateRoute"] = "CreateRoute";
    RouteOrigin["CreateRouteTable"] = "CreateRouteTable";
    RouteOrigin["EnableVgwRoutePropagation"] = "EnableVgwRoutePropagation";
})(RouteOrigin || (RouteOrigin = {}));
export var RouteState;
(function (RouteState) {
    RouteState["active"] = "active";
    RouteState["blackhole"] = "blackhole";
})(RouteState || (RouteState = {}));
export var SnapshotState;
(function (SnapshotState) {
    SnapshotState["completed"] = "completed";
    SnapshotState["error"] = "error";
    SnapshotState["pending"] = "pending";
    SnapshotState["recoverable"] = "recoverable";
    SnapshotState["recovering"] = "recovering";
})(SnapshotState || (SnapshotState = {}));
export var StorageTier;
(function (StorageTier) {
    StorageTier["archive"] = "archive";
    StorageTier["standard"] = "standard";
})(StorageTier || (StorageTier = {}));
export var CopyTagsFromSource;
(function (CopyTagsFromSource) {
    CopyTagsFromSource["volume"] = "volume";
})(CopyTagsFromSource || (CopyTagsFromSource = {}));
export var DatafeedSubscriptionState;
(function (DatafeedSubscriptionState) {
    DatafeedSubscriptionState["Active"] = "Active";
    DatafeedSubscriptionState["Inactive"] = "Inactive";
})(DatafeedSubscriptionState || (DatafeedSubscriptionState = {}));
export var SubnetCidrReservationType;
(function (SubnetCidrReservationType) {
    SubnetCidrReservationType["explicit"] = "explicit";
    SubnetCidrReservationType["prefix"] = "prefix";
})(SubnetCidrReservationType || (SubnetCidrReservationType = {}));
export var TrafficMirrorRuleAction;
(function (TrafficMirrorRuleAction) {
    TrafficMirrorRuleAction["accept"] = "accept";
    TrafficMirrorRuleAction["reject"] = "reject";
})(TrafficMirrorRuleAction || (TrafficMirrorRuleAction = {}));
export var TrafficDirection;
(function (TrafficDirection) {
    TrafficDirection["egress"] = "egress";
    TrafficDirection["ingress"] = "ingress";
})(TrafficDirection || (TrafficDirection = {}));
export var TrafficMirrorNetworkService;
(function (TrafficMirrorNetworkService) {
    TrafficMirrorNetworkService["amazon_dns"] = "amazon-dns";
})(TrafficMirrorNetworkService || (TrafficMirrorNetworkService = {}));
export var TrafficMirrorTargetType;
(function (TrafficMirrorTargetType) {
    TrafficMirrorTargetType["gateway_load_balancer_endpoint"] = "gateway-load-balancer-endpoint";
    TrafficMirrorTargetType["network_interface"] = "network-interface";
    TrafficMirrorTargetType["network_load_balancer"] = "network-load-balancer";
})(TrafficMirrorTargetType || (TrafficMirrorTargetType = {}));
export var AutoAcceptSharedAttachmentsValue;
(function (AutoAcceptSharedAttachmentsValue) {
    AutoAcceptSharedAttachmentsValue["disable"] = "disable";
    AutoAcceptSharedAttachmentsValue["enable"] = "enable";
})(AutoAcceptSharedAttachmentsValue || (AutoAcceptSharedAttachmentsValue = {}));
export var DefaultRouteTableAssociationValue;
(function (DefaultRouteTableAssociationValue) {
    DefaultRouteTableAssociationValue["disable"] = "disable";
    DefaultRouteTableAssociationValue["enable"] = "enable";
})(DefaultRouteTableAssociationValue || (DefaultRouteTableAssociationValue = {}));
export var DefaultRouteTablePropagationValue;
(function (DefaultRouteTablePropagationValue) {
    DefaultRouteTablePropagationValue["disable"] = "disable";
    DefaultRouteTablePropagationValue["enable"] = "enable";
})(DefaultRouteTablePropagationValue || (DefaultRouteTablePropagationValue = {}));
export var MulticastSupportValue;
(function (MulticastSupportValue) {
    MulticastSupportValue["disable"] = "disable";
    MulticastSupportValue["enable"] = "enable";
})(MulticastSupportValue || (MulticastSupportValue = {}));
export var VpnEcmpSupportValue;
(function (VpnEcmpSupportValue) {
    VpnEcmpSupportValue["disable"] = "disable";
    VpnEcmpSupportValue["enable"] = "enable";
})(VpnEcmpSupportValue || (VpnEcmpSupportValue = {}));
export var TransitGatewayState;
(function (TransitGatewayState) {
    TransitGatewayState["available"] = "available";
    TransitGatewayState["deleted"] = "deleted";
    TransitGatewayState["deleting"] = "deleting";
    TransitGatewayState["modifying"] = "modifying";
    TransitGatewayState["pending"] = "pending";
})(TransitGatewayState || (TransitGatewayState = {}));
export var ProtocolValue;
(function (ProtocolValue) {
    ProtocolValue["gre"] = "gre";
})(ProtocolValue || (ProtocolValue = {}));
export var BgpStatus;
(function (BgpStatus) {
    BgpStatus["down"] = "down";
    BgpStatus["up"] = "up";
})(BgpStatus || (BgpStatus = {}));
export var TransitGatewayConnectPeerState;
(function (TransitGatewayConnectPeerState) {
    TransitGatewayConnectPeerState["available"] = "available";
    TransitGatewayConnectPeerState["deleted"] = "deleted";
    TransitGatewayConnectPeerState["deleting"] = "deleting";
    TransitGatewayConnectPeerState["pending"] = "pending";
})(TransitGatewayConnectPeerState || (TransitGatewayConnectPeerState = {}));
export var AutoAcceptSharedAssociationsValue;
(function (AutoAcceptSharedAssociationsValue) {
    AutoAcceptSharedAssociationsValue["disable"] = "disable";
    AutoAcceptSharedAssociationsValue["enable"] = "enable";
})(AutoAcceptSharedAssociationsValue || (AutoAcceptSharedAssociationsValue = {}));
export var Igmpv2SupportValue;
(function (Igmpv2SupportValue) {
    Igmpv2SupportValue["disable"] = "disable";
    Igmpv2SupportValue["enable"] = "enable";
})(Igmpv2SupportValue || (Igmpv2SupportValue = {}));
export var StaticSourcesSupportValue;
(function (StaticSourcesSupportValue) {
    StaticSourcesSupportValue["disable"] = "disable";
    StaticSourcesSupportValue["enable"] = "enable";
})(StaticSourcesSupportValue || (StaticSourcesSupportValue = {}));
export var TransitGatewayMulticastDomainState;
(function (TransitGatewayMulticastDomainState) {
    TransitGatewayMulticastDomainState["available"] = "available";
    TransitGatewayMulticastDomainState["deleted"] = "deleted";
    TransitGatewayMulticastDomainState["deleting"] = "deleting";
    TransitGatewayMulticastDomainState["pending"] = "pending";
})(TransitGatewayMulticastDomainState || (TransitGatewayMulticastDomainState = {}));
export var TransitGatewayPolicyTableState;
(function (TransitGatewayPolicyTableState) {
    TransitGatewayPolicyTableState["available"] = "available";
    TransitGatewayPolicyTableState["deleted"] = "deleted";
    TransitGatewayPolicyTableState["deleting"] = "deleting";
    TransitGatewayPolicyTableState["pending"] = "pending";
})(TransitGatewayPolicyTableState || (TransitGatewayPolicyTableState = {}));
export var TransitGatewayPrefixListReferenceState;
(function (TransitGatewayPrefixListReferenceState) {
    TransitGatewayPrefixListReferenceState["available"] = "available";
    TransitGatewayPrefixListReferenceState["deleting"] = "deleting";
    TransitGatewayPrefixListReferenceState["modifying"] = "modifying";
    TransitGatewayPrefixListReferenceState["pending"] = "pending";
})(TransitGatewayPrefixListReferenceState || (TransitGatewayPrefixListReferenceState = {}));
export var TransitGatewayRouteState;
(function (TransitGatewayRouteState) {
    TransitGatewayRouteState["active"] = "active";
    TransitGatewayRouteState["blackhole"] = "blackhole";
    TransitGatewayRouteState["deleted"] = "deleted";
    TransitGatewayRouteState["deleting"] = "deleting";
    TransitGatewayRouteState["pending"] = "pending";
})(TransitGatewayRouteState || (TransitGatewayRouteState = {}));
export var TransitGatewayRouteType;
(function (TransitGatewayRouteType) {
    TransitGatewayRouteType["propagated"] = "propagated";
    TransitGatewayRouteType["static"] = "static";
})(TransitGatewayRouteType || (TransitGatewayRouteType = {}));
export var TransitGatewayRouteTableState;
(function (TransitGatewayRouteTableState) {
    TransitGatewayRouteTableState["available"] = "available";
    TransitGatewayRouteTableState["deleted"] = "deleted";
    TransitGatewayRouteTableState["deleting"] = "deleting";
    TransitGatewayRouteTableState["pending"] = "pending";
})(TransitGatewayRouteTableState || (TransitGatewayRouteTableState = {}));
export var TransitGatewayRouteTableAnnouncementDirection;
(function (TransitGatewayRouteTableAnnouncementDirection) {
    TransitGatewayRouteTableAnnouncementDirection["incoming"] = "incoming";
    TransitGatewayRouteTableAnnouncementDirection["outgoing"] = "outgoing";
})(TransitGatewayRouteTableAnnouncementDirection || (TransitGatewayRouteTableAnnouncementDirection = {}));
export var TransitGatewayRouteTableAnnouncementState;
(function (TransitGatewayRouteTableAnnouncementState) {
    TransitGatewayRouteTableAnnouncementState["available"] = "available";
    TransitGatewayRouteTableAnnouncementState["deleted"] = "deleted";
    TransitGatewayRouteTableAnnouncementState["deleting"] = "deleting";
    TransitGatewayRouteTableAnnouncementState["failed"] = "failed";
    TransitGatewayRouteTableAnnouncementState["failing"] = "failing";
    TransitGatewayRouteTableAnnouncementState["pending"] = "pending";
})(TransitGatewayRouteTableAnnouncementState || (TransitGatewayRouteTableAnnouncementState = {}));
export var VerifiedAccessEndpointAttachmentType;
(function (VerifiedAccessEndpointAttachmentType) {
    VerifiedAccessEndpointAttachmentType["vpc"] = "vpc";
})(VerifiedAccessEndpointAttachmentType || (VerifiedAccessEndpointAttachmentType = {}));
export var VerifiedAccessEndpointType;
(function (VerifiedAccessEndpointType) {
    VerifiedAccessEndpointType["load_balancer"] = "load-balancer";
    VerifiedAccessEndpointType["network_interface"] = "network-interface";
})(VerifiedAccessEndpointType || (VerifiedAccessEndpointType = {}));
export var VerifiedAccessEndpointProtocol;
(function (VerifiedAccessEndpointProtocol) {
    VerifiedAccessEndpointProtocol["http"] = "http";
    VerifiedAccessEndpointProtocol["https"] = "https";
})(VerifiedAccessEndpointProtocol || (VerifiedAccessEndpointProtocol = {}));
export var VerifiedAccessEndpointStatusCode;
(function (VerifiedAccessEndpointStatusCode) {
    VerifiedAccessEndpointStatusCode["active"] = "active";
    VerifiedAccessEndpointStatusCode["deleted"] = "deleted";
    VerifiedAccessEndpointStatusCode["deleting"] = "deleting";
    VerifiedAccessEndpointStatusCode["pending"] = "pending";
    VerifiedAccessEndpointStatusCode["updating"] = "updating";
})(VerifiedAccessEndpointStatusCode || (VerifiedAccessEndpointStatusCode = {}));
export var VolumeState;
(function (VolumeState) {
    VolumeState["available"] = "available";
    VolumeState["creating"] = "creating";
    VolumeState["deleted"] = "deleted";
    VolumeState["deleting"] = "deleting";
    VolumeState["error"] = "error";
    VolumeState["in_use"] = "in-use";
})(VolumeState || (VolumeState = {}));
export var DnsRecordIpType;
(function (DnsRecordIpType) {
    DnsRecordIpType["dualstack"] = "dualstack";
    DnsRecordIpType["ipv4"] = "ipv4";
    DnsRecordIpType["ipv6"] = "ipv6";
    DnsRecordIpType["service_defined"] = "service-defined";
})(DnsRecordIpType || (DnsRecordIpType = {}));
export var IpAddressType;
(function (IpAddressType) {
    IpAddressType["dualstack"] = "dualstack";
    IpAddressType["ipv4"] = "ipv4";
    IpAddressType["ipv6"] = "ipv6";
})(IpAddressType || (IpAddressType = {}));
export var VpcEndpointType;
(function (VpcEndpointType) {
    VpcEndpointType["Gateway"] = "Gateway";
    VpcEndpointType["GatewayLoadBalancer"] = "GatewayLoadBalancer";
    VpcEndpointType["Interface"] = "Interface";
})(VpcEndpointType || (VpcEndpointType = {}));
export var State;
(function (State) {
    State["Available"] = "Available";
    State["Deleted"] = "Deleted";
    State["Deleting"] = "Deleting";
    State["Expired"] = "Expired";
    State["Failed"] = "Failed";
    State["Pending"] = "Pending";
    State["PendingAcceptance"] = "PendingAcceptance";
    State["Rejected"] = "Rejected";
})(State || (State = {}));
export var ConnectionNotificationState;
(function (ConnectionNotificationState) {
    ConnectionNotificationState["Disabled"] = "Disabled";
    ConnectionNotificationState["Enabled"] = "Enabled";
})(ConnectionNotificationState || (ConnectionNotificationState = {}));
export var ConnectionNotificationType;
(function (ConnectionNotificationType) {
    ConnectionNotificationType["Topic"] = "Topic";
})(ConnectionNotificationType || (ConnectionNotificationType = {}));
export var PayerResponsibility;
(function (PayerResponsibility) {
    PayerResponsibility["ServiceOwner"] = "ServiceOwner";
})(PayerResponsibility || (PayerResponsibility = {}));
export var DnsNameState;
(function (DnsNameState) {
    DnsNameState["Failed"] = "failed";
    DnsNameState["PendingVerification"] = "pendingVerification";
    DnsNameState["Verified"] = "verified";
})(DnsNameState || (DnsNameState = {}));
export var ServiceState;
(function (ServiceState) {
    ServiceState["Available"] = "Available";
    ServiceState["Deleted"] = "Deleted";
    ServiceState["Deleting"] = "Deleting";
    ServiceState["Failed"] = "Failed";
    ServiceState["Pending"] = "Pending";
})(ServiceState || (ServiceState = {}));
export var ServiceType;
(function (ServiceType) {
    ServiceType["Gateway"] = "Gateway";
    ServiceType["GatewayLoadBalancer"] = "GatewayLoadBalancer";
    ServiceType["Interface"] = "Interface";
})(ServiceType || (ServiceType = {}));
export var ServiceConnectivityType;
(function (ServiceConnectivityType) {
    ServiceConnectivityType["ipv4"] = "ipv4";
    ServiceConnectivityType["ipv6"] = "ipv6";
})(ServiceConnectivityType || (ServiceConnectivityType = {}));
export var TunnelInsideIpVersion;
(function (TunnelInsideIpVersion) {
    TunnelInsideIpVersion["ipv4"] = "ipv4";
    TunnelInsideIpVersion["ipv6"] = "ipv6";
})(TunnelInsideIpVersion || (TunnelInsideIpVersion = {}));
export var GatewayAssociationState;
(function (GatewayAssociationState) {
    GatewayAssociationState["associated"] = "associated";
    GatewayAssociationState["associating"] = "associating";
    GatewayAssociationState["disassociating"] = "disassociating";
    GatewayAssociationState["not_associated"] = "not-associated";
})(GatewayAssociationState || (GatewayAssociationState = {}));
export var VpnStaticRouteSource;
(function (VpnStaticRouteSource) {
    VpnStaticRouteSource["Static"] = "Static";
})(VpnStaticRouteSource || (VpnStaticRouteSource = {}));
export var VpnState;
(function (VpnState) {
    VpnState["available"] = "available";
    VpnState["deleted"] = "deleted";
    VpnState["deleting"] = "deleting";
    VpnState["pending"] = "pending";
})(VpnState || (VpnState = {}));
export var TelemetryStatus;
(function (TelemetryStatus) {
    TelemetryStatus["DOWN"] = "DOWN";
    TelemetryStatus["UP"] = "UP";
})(TelemetryStatus || (TelemetryStatus = {}));
export var FleetStateCode;
(function (FleetStateCode) {
    FleetStateCode["ACTIVE"] = "active";
    FleetStateCode["DELETED"] = "deleted";
    FleetStateCode["DELETED_RUNNING"] = "deleted_running";
    FleetStateCode["DELETED_TERMINATING_INSTANCES"] = "deleted_terminating";
    FleetStateCode["FAILED"] = "failed";
    FleetStateCode["MODIFYING"] = "modifying";
    FleetStateCode["SUBMITTED"] = "submitted";
})(FleetStateCode || (FleetStateCode = {}));
export var DeleteFleetErrorCode;
(function (DeleteFleetErrorCode) {
    DeleteFleetErrorCode["FLEET_ID_DOES_NOT_EXIST"] = "fleetIdDoesNotExist";
    DeleteFleetErrorCode["FLEET_ID_MALFORMED"] = "fleetIdMalformed";
    DeleteFleetErrorCode["FLEET_NOT_IN_DELETABLE_STATE"] = "fleetNotInDeletableState";
    DeleteFleetErrorCode["UNEXPECTED_ERROR"] = "unexpectedError";
})(DeleteFleetErrorCode || (DeleteFleetErrorCode = {}));
export var LaunchTemplateErrorCode;
(function (LaunchTemplateErrorCode) {
    LaunchTemplateErrorCode["LAUNCH_TEMPLATE_ID_DOES_NOT_EXIST"] = "launchTemplateIdDoesNotExist";
    LaunchTemplateErrorCode["LAUNCH_TEMPLATE_ID_MALFORMED"] = "launchTemplateIdMalformed";
    LaunchTemplateErrorCode["LAUNCH_TEMPLATE_NAME_DOES_NOT_EXIST"] = "launchTemplateNameDoesNotExist";
    LaunchTemplateErrorCode["LAUNCH_TEMPLATE_NAME_MALFORMED"] = "launchTemplateNameMalformed";
    LaunchTemplateErrorCode["LAUNCH_TEMPLATE_VERSION_DOES_NOT_EXIST"] = "launchTemplateVersionDoesNotExist";
    LaunchTemplateErrorCode["UNEXPECTED_ERROR"] = "unexpectedError";
})(LaunchTemplateErrorCode || (LaunchTemplateErrorCode = {}));
export var DeleteQueuedReservedInstancesErrorCode;
(function (DeleteQueuedReservedInstancesErrorCode) {
    DeleteQueuedReservedInstancesErrorCode["RESERVED_INSTANCES_ID_INVALID"] = "reserved-instances-id-invalid";
    DeleteQueuedReservedInstancesErrorCode["RESERVED_INSTANCES_NOT_IN_QUEUED_STATE"] = "reserved-instances-not-in-queued-state";
    DeleteQueuedReservedInstancesErrorCode["UNEXPECTED_ERROR"] = "unexpected-error";
})(DeleteQueuedReservedInstancesErrorCode || (DeleteQueuedReservedInstancesErrorCode = {}));
export const RouteTableAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PropagatingVgwFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RouteFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RouteTableFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateRouteTableResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateSecurityGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateSecurityGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SnapshotFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InstanceSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateSnapshotsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SnapshotInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateSnapshotsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateSpotDatafeedSubscriptionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SpotInstanceStateFaultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SpotDatafeedSubscriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateSpotDatafeedSubscriptionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const S3ObjectTagFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateStoreImageTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateStoreImageTaskResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateSubnetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateSubnetResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateSubnetCidrReservationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SubnetCidrReservationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateSubnetCidrReservationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTagsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTrafficMirrorFilterRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TrafficMirrorPortRangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TrafficMirrorFilterRuleFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TrafficMirrorFilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTrafficMirrorFilterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TrafficMirrorPortRangeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTrafficMirrorFilterRuleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTrafficMirrorFilterRuleResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTrafficMirrorSessionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TrafficMirrorSessionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTrafficMirrorSessionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTrafficMirrorTargetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TrafficMirrorTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTrafficMirrorTargetResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayRequestOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayConnectRequestOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayConnectRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayConnectOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayConnectFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayConnectResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayConnectRequestBgpOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayConnectPeerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayAttachmentBgpConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayConnectPeerConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayConnectPeerFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayConnectPeerResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayMulticastDomainRequestOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayMulticastDomainRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayMulticastDomainOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayMulticastDomainFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayMulticastDomainResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayPeeringAttachmentRequestOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayPeeringAttachmentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayPeeringAttachmentResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayPolicyTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayPolicyTableFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayPolicyTableResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayPrefixListReferenceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayPrefixListAttachmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayPrefixListReferenceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayPrefixListReferenceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayRouteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayRouteAttachmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayRouteFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayRouteResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayRouteTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayRouteTableFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayRouteTableResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayRouteTableAnnouncementRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TransitGatewayRouteTableAnnouncementFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayRouteTableAnnouncementResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayVpcAttachmentRequestOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayVpcAttachmentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTransitGatewayVpcAttachmentResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVerifiedAccessEndpointLoadBalancerOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVerifiedAccessEndpointEniOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVerifiedAccessEndpointRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VerifiedAccessEndpointLoadBalancerOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VerifiedAccessEndpointEniOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VerifiedAccessEndpointStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VerifiedAccessEndpointFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVerifiedAccessEndpointResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVerifiedAccessGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VerifiedAccessGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVerifiedAccessGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVerifiedAccessInstanceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVerifiedAccessInstanceResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVerifiedAccessTrustProviderDeviceOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVerifiedAccessTrustProviderOidcOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVerifiedAccessTrustProviderRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVerifiedAccessTrustProviderResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVolumeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VolumeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpcRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpcResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DnsOptionsSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpcEndpointRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DnsEntryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DnsOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SecurityGroupIdentifierFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LastErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VpcEndpointFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpcEndpointResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpcEndpointConnectionNotificationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ConnectionNotificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpcEndpointConnectionNotificationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpcEndpointServiceConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PrivateDnsNameConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ServiceTypeDetailFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ServiceConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpcEndpointServiceConfigurationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpcPeeringConnectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpcPeeringConnectionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IKEVersionsRequestListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CloudWatchLogOptionsSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VpnTunnelLogOptionsSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Phase1DHGroupNumbersRequestListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Phase1EncryptionAlgorithmsRequestListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Phase1IntegrityAlgorithmsRequestListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Phase2DHGroupNumbersRequestListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Phase2EncryptionAlgorithmsRequestListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Phase2IntegrityAlgorithmsRequestListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VpnTunnelOptionsSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VpnConnectionOptionsSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpnConnectionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IKEVersionsListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CloudWatchLogOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VpnTunnelLogOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Phase1DHGroupNumbersListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Phase1EncryptionAlgorithmsListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Phase1IntegrityAlgorithmsListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Phase2DHGroupNumbersListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Phase2EncryptionAlgorithmsListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const Phase2IntegrityAlgorithmsListValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TunnelOptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VpnConnectionOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VpnStaticRouteFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VgwTelemetryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VpnConnectionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpnConnectionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpnConnectionRouteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpnGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VpnGatewayFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateVpnGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCarrierGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCarrierGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteClientVpnEndpointRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteClientVpnEndpointResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteClientVpnRouteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteClientVpnRouteResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCoipCidrRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCoipCidrResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCoipPoolRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCoipPoolResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCustomerGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteDhcpOptionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteEgressOnlyInternetGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteEgressOnlyInternetGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteFleetsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteFleetSuccessItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteFleetErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteFleetErrorItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteFleetsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteFlowLogsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteFlowLogsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteFpgaImageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteFpgaImageResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteInstanceEventWindowRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const InstanceEventWindowStateChangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteInstanceEventWindowResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteInternetGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteIpamRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteIpamResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteIpamPoolRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteIpamPoolResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteIpamResourceDiscoveryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteIpamResourceDiscoveryResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteIpamScopeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteIpamScopeResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteKeyPairRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLaunchTemplateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLaunchTemplateResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLaunchTemplateVersionsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLaunchTemplateVersionsResponseSuccessItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResponseErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLaunchTemplateVersionsResponseErrorItemFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLaunchTemplateVersionsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLocalGatewayRouteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLocalGatewayRouteResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLocalGatewayRouteTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLocalGatewayRouteTableResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLocalGatewayRouteTableVpcAssociationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteLocalGatewayRouteTableVpcAssociationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteManagedPrefixListRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteManagedPrefixListResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNatGatewayRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNatGatewayResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkAclRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkAclEntryRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkInsightsAccessScopeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkInsightsAccessScopeResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkInsightsAccessScopeAnalysisRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkInsightsAccessScopeAnalysisResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkInsightsAnalysisRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkInsightsAnalysisResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkInsightsPathRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkInsightsPathResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkInterfaceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkInterfacePermissionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteNetworkInterfacePermissionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeletePlacementGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeletePublicIpv4PoolRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeletePublicIpv4PoolResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteQueuedReservedInstancesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteQueuedReservedInstancesErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FailedQueuedPurchaseDeletionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SuccessfulQueuedPurchaseDeletionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteQueuedReservedInstancesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteRouteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteRouteTableRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteSecurityGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteSnapshotRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteSpotDatafeedSubscriptionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteSubnetRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteSubnetCidrReservationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteSubnetCidrReservationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteTagsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteTrafficMirrorFilterRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteTrafficMirrorFilterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteTrafficMirrorFilterRuleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteTrafficMirrorFilterRuleResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteTrafficMirrorSessionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
