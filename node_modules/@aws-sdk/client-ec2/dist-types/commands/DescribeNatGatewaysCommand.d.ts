import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { EC2ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EC2Client";
import { DescribeNatGatewaysRequest, DescribeNatGatewaysResult } from "../models/models_4";
/**
 * The input for {@link DescribeNatGatewaysCommand}.
 */
export interface DescribeNatGatewaysCommandInput extends DescribeNatGatewaysRequest {
}
/**
 * The output of {@link DescribeNatGatewaysCommand}.
 */
export interface DescribeNatGatewaysCommandOutput extends DescribeNatGatewaysResult, __MetadataBearer {
}
/**
 * <p>Describes one or more of your NAT gateways.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { EC2Client, DescribeNatGatewaysCommand } from "@aws-sdk/client-ec2"; // ES Modules import
 * // const { EC2Client, DescribeNatGatewaysCommand } = require("@aws-sdk/client-ec2"); // CommonJS import
 * const client = new EC2Client(config);
 * const command = new DescribeNatGatewaysCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link DescribeNatGatewaysCommandInput} for command's `input` shape.
 * @see {@link DescribeNatGatewaysCommandOutput} for command's `response` shape.
 * @see {@link EC2ClientResolvedConfig | config} for EC2Client's `config` shape.
 *
 *
 * @example To describe a NAT gateway
 * ```javascript
 * // This example describes the NAT gateway for the specified VPC.
 * const input = {
 *   "Filter": [
 *     {
 *       "Name": "vpc-id",
 *       "Values": [
 *         "vpc-1a2b3c4d"
 *       ]
 *     }
 *   ]
 * };
 * const command = new DescribeNatGatewaysCommand(input);
 * const response = await client.send(command);
 * /* response ==
 * {
 *   "NatGateways": [
 *     {
 *       "CreateTime": "2015-12-01T12:26:55.983Z",
 *       "NatGatewayAddresses": [
 *         {
 *           "AllocationId": "eipalloc-89c620ec",
 *           "NetworkInterfaceId": "eni-9dec76cd",
 *           "PrivateIp": "10.0.0.149",
 *           "PublicIp": "198.11.222.333"
 *         }
 *       ],
 *       "NatGatewayId": "nat-05dba92075d71c408",
 *       "State": "available",
 *       "SubnetId": "subnet-847e4dc2",
 *       "VpcId": "vpc-1a2b3c4d"
 *     }
 *   ]
 * }
 * *\/
 * // example id: ec2-describe-nat-gateways-1
 * ```
 *
 */
export declare class DescribeNatGatewaysCommand extends $Command<DescribeNatGatewaysCommandInput, DescribeNatGatewaysCommandOutput, EC2ClientResolvedConfig> {
    readonly input: DescribeNatGatewaysCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    constructor(input: DescribeNatGatewaysCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EC2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeNatGatewaysCommandInput, DescribeNatGatewaysCommandOutput>;
    private serialize;
    private deserialize;
}
