import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { EC2ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EC2Client";
import { DescribeAvailabilityZonesRequest, DescribeAvailabilityZonesResult } from "../models/models_3";
/**
 * The input for {@link DescribeAvailabilityZonesCommand}.
 */
export interface DescribeAvailabilityZonesCommandInput extends DescribeAvailabilityZonesRequest {
}
/**
 * The output of {@link DescribeAvailabilityZonesCommand}.
 */
export interface DescribeAvailabilityZonesCommandOutput extends DescribeAvailabilityZonesResult, __MetadataBearer {
}
/**
 * <p>Describes the Availability Zones, Local Zones, and Wavelength Zones that are available to
 *       you. If there is an event impacting a zone, you can use this request to view the state and any
 *       provided messages for that zone.</p>
 *          <p>For more information about Availability Zones, Local Zones, and Wavelength Zones, see
 *         <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html">Regions and zones</a>
 *       in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { EC2Client, DescribeAvailabilityZonesCommand } from "@aws-sdk/client-ec2"; // ES Modules import
 * // const { EC2Client, DescribeAvailabilityZonesCommand } = require("@aws-sdk/client-ec2"); // CommonJS import
 * const client = new EC2Client(config);
 * const command = new DescribeAvailabilityZonesCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link DescribeAvailabilityZonesCommandInput} for command's `input` shape.
 * @see {@link DescribeAvailabilityZonesCommandOutput} for command's `response` shape.
 * @see {@link EC2ClientResolvedConfig | config} for EC2Client's `config` shape.
 *
 *
 * @example To describe your Availability Zones
 * ```javascript
 * // This example describes the Availability Zones that are available to you. The response includes Availability Zones only for the current region.
 * const input = undefined;
 * const command = new DescribeAvailabilityZonesCommand(input);
 * const response = await client.send(command);
 * /* response ==
 * {
 *   "AvailabilityZones": [
 *     {
 *       "Messages": [],
 *       "RegionName": "us-east-1",
 *       "State": "available",
 *       "ZoneName": "us-east-1b"
 *     },
 *     {
 *       "Messages": [],
 *       "RegionName": "us-east-1",
 *       "State": "available",
 *       "ZoneName": "us-east-1c"
 *     },
 *     {
 *       "Messages": [],
 *       "RegionName": "us-east-1",
 *       "State": "available",
 *       "ZoneName": "us-east-1d"
 *     },
 *     {
 *       "Messages": [],
 *       "RegionName": "us-east-1",
 *       "State": "available",
 *       "ZoneName": "us-east-1e"
 *     }
 *   ]
 * }
 * *\/
 * // example id: ec2-describe-availability-zones-1
 * ```
 *
 */
export declare class DescribeAvailabilityZonesCommand extends $Command<DescribeAvailabilityZonesCommandInput, DescribeAvailabilityZonesCommandOutput, EC2ClientResolvedConfig> {
    readonly input: DescribeAvailabilityZonesCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    constructor(input: DescribeAvailabilityZonesCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EC2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAvailabilityZonesCommandInput, DescribeAvailabilityZonesCommandOutput>;
    private serialize;
    private deserialize;
}
