import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { EC2ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EC2Client";
import { UnassignPrivateNatGatewayAddressRequest, UnassignPrivateNatGatewayAddressResult } from "../models/models_7";
/**
 * The input for {@link UnassignPrivateNatGatewayAddressCommand}.
 */
export interface UnassignPrivateNatGatewayAddressCommandInput extends UnassignPrivateNatGatewayAddressRequest {
}
/**
 * The output of {@link UnassignPrivateNatGatewayAddressCommand}.
 */
export interface UnassignPrivateNatGatewayAddressCommandOutput extends UnassignPrivateNatGatewayAddressResult, __MetadataBearer {
}
/**
 * <p>Unassigns secondary private IPv4 addresses from a private NAT gateway. You cannot unassign your primary private IP. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html#nat-gateway-edit-secondary">Edit secondary IP address associations</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
 *          <p>While unassigning is in progress, you cannot assign/unassign additional IP addresses while the connections are being drained. You are, however, allowed to delete the NAT gateway.</p>
 *          <p>A private IP address will only be released at the end of MaxDrainDurationSeconds. The
 *             private IP addresses stay associated and support the existing connections but do not
 *             support any new connections (new connections are distributed across the remaining
 *             assigned private IP address). After the existing connections drain out, the private IP
 *             addresses get released. </p>
 *          <p></p>
 *          <p></p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { EC2Client, UnassignPrivateNatGatewayAddressCommand } from "@aws-sdk/client-ec2"; // ES Modules import
 * // const { EC2Client, UnassignPrivateNatGatewayAddressCommand } = require("@aws-sdk/client-ec2"); // CommonJS import
 * const client = new EC2Client(config);
 * const command = new UnassignPrivateNatGatewayAddressCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link UnassignPrivateNatGatewayAddressCommandInput} for command's `input` shape.
 * @see {@link UnassignPrivateNatGatewayAddressCommandOutput} for command's `response` shape.
 * @see {@link EC2ClientResolvedConfig | config} for EC2Client's `config` shape.
 *
 *
 */
export declare class UnassignPrivateNatGatewayAddressCommand extends $Command<UnassignPrivateNatGatewayAddressCommandInput, UnassignPrivateNatGatewayAddressCommandOutput, EC2ClientResolvedConfig> {
    readonly input: UnassignPrivateNatGatewayAddressCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    constructor(input: UnassignPrivateNatGatewayAddressCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EC2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UnassignPrivateNatGatewayAddressCommandInput, UnassignPrivateNatGatewayAddressCommandOutput>;
    private serialize;
    private deserialize;
}
