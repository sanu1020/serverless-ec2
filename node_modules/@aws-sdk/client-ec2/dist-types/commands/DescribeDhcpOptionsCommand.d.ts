import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { EC2ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EC2Client";
import { DescribeDhcpOptionsRequest, DescribeDhcpOptionsResult } from "../models/models_3";
/**
 * The input for {@link DescribeDhcpOptionsCommand}.
 */
export interface DescribeDhcpOptionsCommandInput extends DescribeDhcpOptionsRequest {
}
/**
 * The output of {@link DescribeDhcpOptionsCommand}.
 */
export interface DescribeDhcpOptionsCommandOutput extends DescribeDhcpOptionsResult, __MetadataBearer {
}
/**
 * <p>Describes one or more of your DHCP options sets.</p>
 *          <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html">DHCP options sets</a> in the
 * 				<i>Amazon Virtual Private Cloud User Guide</i>.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { EC2Client, DescribeDhcpOptionsCommand } from "@aws-sdk/client-ec2"; // ES Modules import
 * // const { EC2Client, DescribeDhcpOptionsCommand } = require("@aws-sdk/client-ec2"); // CommonJS import
 * const client = new EC2Client(config);
 * const command = new DescribeDhcpOptionsCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link DescribeDhcpOptionsCommandInput} for command's `input` shape.
 * @see {@link DescribeDhcpOptionsCommandOutput} for command's `response` shape.
 * @see {@link EC2ClientResolvedConfig | config} for EC2Client's `config` shape.
 *
 *
 * @example To describe a DHCP options set
 * ```javascript
 * // This example describes the specified DHCP options set.
 * const input = {
 *   "DhcpOptionsIds": [
 *     "dopt-d9070ebb"
 *   ]
 * };
 * const command = new DescribeDhcpOptionsCommand(input);
 * const response = await client.send(command);
 * /* response ==
 * {
 *   "DhcpOptions": [
 *     {
 *       "DhcpConfigurations": [
 *         {
 *           "Key": "domain-name-servers",
 *           "Values": [
 *             {
 *               "Value": "10.2.5.2"
 *             },
 *             {
 *               "Value": "10.2.5.1"
 *             }
 *           ]
 *         }
 *       ],
 *       "DhcpOptionsId": "dopt-d9070ebb"
 *     }
 *   ]
 * }
 * *\/
 * // example id: ec2-describe-dhcp-options-1
 * ```
 *
 */
export declare class DescribeDhcpOptionsCommand extends $Command<DescribeDhcpOptionsCommandInput, DescribeDhcpOptionsCommandOutput, EC2ClientResolvedConfig> {
    readonly input: DescribeDhcpOptionsCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    constructor(input: DescribeDhcpOptionsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EC2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeDhcpOptionsCommandInput, DescribeDhcpOptionsCommandOutput>;
    private serialize;
    private deserialize;
}
