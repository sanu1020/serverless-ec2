import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { EC2ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EC2Client";
import { DescribeSpotFleetRequestsRequest, DescribeSpotFleetRequestsResponse } from "../models/models_4";
/**
 * The input for {@link DescribeSpotFleetRequestsCommand}.
 */
export interface DescribeSpotFleetRequestsCommandInput extends DescribeSpotFleetRequestsRequest {
}
/**
 * The output of {@link DescribeSpotFleetRequestsCommand}.
 */
export interface DescribeSpotFleetRequestsCommandOutput extends DescribeSpotFleetRequestsResponse, __MetadataBearer {
}
/**
 * <p>Describes your Spot Fleet requests.</p>
 *          <p>Spot Fleet requests are deleted 48 hours after they are canceled and their instances
 *             are terminated.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { EC2Client, DescribeSpotFleetRequestsCommand } from "@aws-sdk/client-ec2"; // ES Modules import
 * // const { EC2Client, DescribeSpotFleetRequestsCommand } = require("@aws-sdk/client-ec2"); // CommonJS import
 * const client = new EC2Client(config);
 * const command = new DescribeSpotFleetRequestsCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link DescribeSpotFleetRequestsCommandInput} for command's `input` shape.
 * @see {@link DescribeSpotFleetRequestsCommandOutput} for command's `response` shape.
 * @see {@link EC2ClientResolvedConfig | config} for EC2Client's `config` shape.
 *
 *
 * @example To describe a Spot fleet request
 * ```javascript
 * // This example describes the specified Spot fleet request.
 * const input = {
 *   "SpotFleetRequestIds": [
 *     "sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE"
 *   ]
 * };
 * const command = new DescribeSpotFleetRequestsCommand(input);
 * const response = await client.send(command);
 * /* response ==
 * {
 *   "SpotFleetRequestConfigs": [
 *     {
 *       "SpotFleetRequestConfig": {
 *         "IamFleetRole": "arn:aws:iam::123456789012:role/my-spot-fleet-role",
 *         "LaunchSpecifications": [
 *           {
 *             "EbsOptimized": false,
 *             "ImageId": "ami-1a2b3c4d",
 *             "InstanceType": "cc2.8xlarge",
 *             "NetworkInterfaces": [
 *               {
 *                 "AssociatePublicIpAddress": true,
 *                 "DeleteOnTermination": false,
 *                 "DeviceIndex": 0,
 *                 "SecondaryPrivateIpAddressCount": 0,
 *                 "SubnetId": "subnet-a61dafcf"
 *               }
 *             ]
 *           },
 *           {
 *             "EbsOptimized": false,
 *             "ImageId": "ami-1a2b3c4d",
 *             "InstanceType": "r3.8xlarge",
 *             "NetworkInterfaces": [
 *               {
 *                 "AssociatePublicIpAddress": true,
 *                 "DeleteOnTermination": false,
 *                 "DeviceIndex": 0,
 *                 "SecondaryPrivateIpAddressCount": 0,
 *                 "SubnetId": "subnet-a61dafcf"
 *               }
 *             ]
 *           }
 *         ],
 *         "SpotPrice": "0.05",
 *         "TargetCapacity": 20
 *       },
 *       "SpotFleetRequestId": "sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE",
 *       "SpotFleetRequestState": "active"
 *     }
 *   ]
 * }
 * *\/
 * // example id: ec2-describe-spot-fleet-requests-1
 * ```
 *
 */
export declare class DescribeSpotFleetRequestsCommand extends $Command<DescribeSpotFleetRequestsCommandInput, DescribeSpotFleetRequestsCommandOutput, EC2ClientResolvedConfig> {
    readonly input: DescribeSpotFleetRequestsCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    constructor(input: DescribeSpotFleetRequestsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EC2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeSpotFleetRequestsCommandInput, DescribeSpotFleetRequestsCommandOutput>;
    private serialize;
    private deserialize;
}
