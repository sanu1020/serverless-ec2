import { ByoipCidr, IpPermission, NatGatewayAddress } from "./models_0";
import { InstanceMonitoring, InstanceStateChange } from "./models_6";
export interface TerminateInstancesResult {
  TerminatingInstances?: InstanceStateChange[];
}
export interface UnassignIpv6AddressesRequest {
  Ipv6Addresses?: string[];
  Ipv6Prefixes?: string[];
  NetworkInterfaceId: string | undefined;
}
export interface UnassignIpv6AddressesResult {
  NetworkInterfaceId?: string;
  UnassignedIpv6Addresses?: string[];
  UnassignedIpv6Prefixes?: string[];
}
export interface UnassignPrivateIpAddressesRequest {
  NetworkInterfaceId: string | undefined;
  PrivateIpAddresses?: string[];
  Ipv4Prefixes?: string[];
}
export interface UnassignPrivateNatGatewayAddressRequest {
  NatGatewayId: string | undefined;
  PrivateIpAddresses: string[] | undefined;
  MaxDrainDurationSeconds?: number;
  DryRun?: boolean;
}
export interface UnassignPrivateNatGatewayAddressResult {
  NatGatewayId?: string;
  NatGatewayAddresses?: NatGatewayAddress[];
}
export interface UnmonitorInstancesRequest {
  InstanceIds: string[] | undefined;
  DryRun?: boolean;
}
export interface UnmonitorInstancesResult {
  InstanceMonitorings?: InstanceMonitoring[];
}
export interface SecurityGroupRuleDescription {
  SecurityGroupRuleId?: string;
  Description?: string;
}
export interface UpdateSecurityGroupRuleDescriptionsEgressRequest {
  DryRun?: boolean;
  GroupId?: string;
  GroupName?: string;
  IpPermissions?: IpPermission[];
  SecurityGroupRuleDescriptions?: SecurityGroupRuleDescription[];
}
export interface UpdateSecurityGroupRuleDescriptionsEgressResult {
  Return?: boolean;
}
export interface UpdateSecurityGroupRuleDescriptionsIngressRequest {
  DryRun?: boolean;
  GroupId?: string;
  GroupName?: string;
  IpPermissions?: IpPermission[];
  SecurityGroupRuleDescriptions?: SecurityGroupRuleDescription[];
}
export interface UpdateSecurityGroupRuleDescriptionsIngressResult {
  Return?: boolean;
}
export interface WithdrawByoipCidrRequest {
  Cidr: string | undefined;
  DryRun?: boolean;
}
export interface WithdrawByoipCidrResult {
  ByoipCidr?: ByoipCidr;
}
export declare const TerminateInstancesResultFilterSensitiveLog: (
  obj: TerminateInstancesResult
) => any;
export declare const UnassignIpv6AddressesRequestFilterSensitiveLog: (
  obj: UnassignIpv6AddressesRequest
) => any;
export declare const UnassignIpv6AddressesResultFilterSensitiveLog: (
  obj: UnassignIpv6AddressesResult
) => any;
export declare const UnassignPrivateIpAddressesRequestFilterSensitiveLog: (
  obj: UnassignPrivateIpAddressesRequest
) => any;
export declare const UnassignPrivateNatGatewayAddressRequestFilterSensitiveLog: (
  obj: UnassignPrivateNatGatewayAddressRequest
) => any;
export declare const UnassignPrivateNatGatewayAddressResultFilterSensitiveLog: (
  obj: UnassignPrivateNatGatewayAddressResult
) => any;
export declare const UnmonitorInstancesRequestFilterSensitiveLog: (
  obj: UnmonitorInstancesRequest
) => any;
export declare const UnmonitorInstancesResultFilterSensitiveLog: (
  obj: UnmonitorInstancesResult
) => any;
export declare const SecurityGroupRuleDescriptionFilterSensitiveLog: (
  obj: SecurityGroupRuleDescription
) => any;
export declare const UpdateSecurityGroupRuleDescriptionsEgressRequestFilterSensitiveLog: (
  obj: UpdateSecurityGroupRuleDescriptionsEgressRequest
) => any;
export declare const UpdateSecurityGroupRuleDescriptionsEgressResultFilterSensitiveLog: (
  obj: UpdateSecurityGroupRuleDescriptionsEgressResult
) => any;
export declare const UpdateSecurityGroupRuleDescriptionsIngressRequestFilterSensitiveLog: (
  obj: UpdateSecurityGroupRuleDescriptionsIngressRequest
) => any;
export declare const UpdateSecurityGroupRuleDescriptionsIngressResultFilterSensitiveLog: (
  obj: UpdateSecurityGroupRuleDescriptionsIngressResult
) => any;
export declare const WithdrawByoipCidrRequestFilterSensitiveLog: (
  obj: WithdrawByoipCidrRequest
) => any;
export declare const WithdrawByoipCidrResultFilterSensitiveLog: (
  obj: WithdrawByoipCidrResult
) => any;
